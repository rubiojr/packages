
Upstream-HEAD: vendor
Upstream-2.0: vendor
Upstream-Status: vendor-specific change

--- httpd-2.2.3/server/core.c.release
+++ httpd-2.2.3/server/core.c
@@ -2710,6 +2710,7 @@
     SrvTk_MINIMAL,      /* eg: Apache/2.0.41 */
     SrvTk_OS,           /* eg: Apache/2.0.41 (UNIX) */
     SrvTk_FULL,         /* eg: Apache/2.0.41 (UNIX) PHP/4.2.2 FooBar/1.2b */
+    SrvTk_FULL_RELEASE, /* eg: Apache/2.0.41 (Red Hat) (Release 64.ent) PHP/4.2.2 FooBar/1.2b */
     SrvTk_PRODUCT_ONLY  /* eg: Apache */
 };
 static enum server_token_type ap_server_tokens = SrvTk_FULL;
@@ -2777,15 +2778,18 @@
     else if (ap_server_tokens == SrvTk_MAJOR) {
         ap_add_version_component(pconf, AP_SERVER_BASEPRODUCT "/" AP_SERVER_MAJORVERSION);
     }
-    else {
-        ap_add_version_component(pconf, AP_SERVER_BASEVERSION " (" PLATFORM ")");
+    else if (ap_server_tokens == SrvTk_FULL_RELEASE) {
+        ap_add_version_component(pconf, AP_SERVER_BASEVERSION " (@VENDOR@) (Release @RELEASE@)");
+    }
+    else {        
+        ap_add_version_component(pconf, AP_SERVER_BASEVERSION " (@VENDOR@)");
     }
 
     /*
      * Lock the server_version string if we're not displaying
      * the full set of tokens
      */
-    if (ap_server_tokens != SrvTk_FULL) {
+    if (ap_server_tokens != SrvTk_FULL && ap_server_tokens != SrvTk_FULL_RELEASE) {
         version_locked++;
     }
 }
@@ -2814,6 +2818,9 @@
     else if (!strcasecmp(arg, "Prod") || !strcasecmp(arg, "ProductOnly")) {
         ap_server_tokens = SrvTk_PRODUCT_ONLY;
     }
+    else if (!strcasecmp(arg, "Full-Release")) {
+        ap_server_tokens = SrvTk_FULL_RELEASE;
+    }
     else {
         ap_server_tokens = SrvTk_FULL;
     }
